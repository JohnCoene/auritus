n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels(
position = "inside",
formatter = htmlwidgets::JS("function(x){return(x.value + '%')}")
) %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE
) %>%
e_y_axis(
show = FALSE,
max = 100
) %>%
e_legend(FALSE) %>%
e_flip_coords()
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 70) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels(
position = "inside",
formatter = "{c}%"
) %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE
) %>%
e_y_axis(
show = FALSE,
max = 100
) %>%
e_legend(FALSE) %>%
e_flip_coords()
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 70) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels(
position = "inside",
formatter = "{b}%"
) %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE
) %>%
e_y_axis(
show = FALSE,
max = 100
) %>%
e_legend(FALSE) %>%
e_flip_coords()
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 70) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels(
position = "inside",
formatter = "{a}%"
) %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE
) %>%
e_y_axis(
show = FALSE,
max = 100
) %>%
e_legend(FALSE) %>%
e_flip_coords()
devtools::document()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
?e_theme
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
pool <- pool::dbPool(drv = RSQLite::SQLite(), dbname = "articles")
data <- DBI::dbGetQuery(pool, "SELECT * FROM articles LIMIT 100;$")
pool::poolClose(pool)
View(data)
launch_auritus()
count(data, author)
count(data, author, sort = T)
count(data, thread_site, sort = T)
data %>%
filter(thread_site_type == "news") %>%
count(thread_site)
data %>%
filter(thread_site_type == "news") %>%
count(thread_site, sort = T)
pool
query <- paste(base_query, date_query, "AND thread_site_type = 'news'")
base_query <- "SELECT thread_site, COUNT(thread_site) AS n FROM articles"
date_query <- paste0(
"WHERE published >= '", dates[1], " 00:00:00' AND published <= '", dates[2], " 23:59:59';"
)
query <- paste(base_query, date_query, "AND thread_site_type = 'news'")
N <- dbGetQuery(pool, query) %>%
pull(n)
pool <- pool::dbPool(drv = RSQLite::SQLite(), dbname = "articles")
N <- dbGetQuery(pool, query) %>%
pull(n)
N
N <- dbGetQuery(pool, query)
N
library(auritus)
pool::poolClose(pool)
launch_auritus()
library(auritus)
launch_auritus()
launch_auritus()
names(data)
unique(data$thread_site_type)
base_query <- "SELECT DISTINCT thread_site_type FROM articles"
query <- "SELECT DISTINCT thread_site_type FROM articles"
N <- dbGetQuery(pool, query)
pool
pool::poolClose(poll)
pool::poolClose(pool)
pool <- pool::dbPool(drv = RSQLite::SQLite(), dbname = "articles")
N <- DBI::dbGetQuery(pool, query)
N
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
?shinyWidgets::checkboxGroupButtons
library(auritus)
launch_auritus()
paste(LETTERS[1:3], collapse = ",")
library(auritus)
launch_auritus()
pool <- pool::dbPool(drv = RSQLite::SQLite(), dbname = "articles")
base_query <- "SELECT COUNT(uuid) AS n FROM articles"
date_query <- paste0(
"WHERE published >= '", dates[1], " 00:00:00' AND published <= '", dates[2], " 23:59:59'"
)
type_query <- paste(
"AND thread_site_type IN(", paste(input$sitetypes, collapse = ","), ")"
)
paste0(LETTERS[1:3], collapse = "',")
paste0(LETTERS[1:3], collapse = "','")
paste0(paste0(LETTERS[1:3], collapse = "','"), "'")
paste0("'", paste0(LETTERS[1:3], collapse = "','"), "'")
base_query <- "SELECT COUNT(uuid) AS n FROM articles"
date_query <- paste0(
"WHERE published >= '", dates[1], " 00:00:00' AND published <= '", dates[2], " 23:59:59'"
)
type_query <- paste(
"AND thread_site_type IN(",
paste0(
"'",
paste(input$sitetypes, collapse = "','"),
"'"
)
, ")"
)
query <- paste(base_query, date_query, ";")
base_query <- "SELECT COUNT(uuid) AS n FROM articles"
date_query <- paste0(
"WHERE published >= '", dates[1], " 00:00:00' AND published <= '", dates[2], " 23:59:59'"
)
type_query <- paste(
"AND thread_site_type IN(",
paste0(
"'",
paste(c("news", "blogs"), collapse = "','"),
"'"
)
, ")"
)
query <- paste(base_query, date_query, ";")
query
query <- paste(base_query, date_query, type_query, ";")
query
DBI::dbGetQuery(pool, query)
library(auritus)
pool::poolClose(pool)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch
launch_auritus()
library(auritus)
launch_auritus()
devtools::document()
library(auritus)
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
?e_theme
?echarts4r::e_theme
ggthemes::calc_pal()
ggthemes::calc_pal(20)
ggthemes::calc_pal()(29)
ggthemes::calc_pal()(12)
devtools::install_github("jkaupp/nord")
nord::nord_show_palette("afternoon_prarie")
?nord::nord_palettes
nord::nord_palettes$afternoon_prarie
devtools::install_github("EdwinTh/dutchmasters")
dutchmasters::dutchmasters$milkmaid
colorRampPalette(c("#34495e", "#C10007"))(12)
colorRampPalette(c("#34495e", "#C10007"))(6)
colorRampPalette(c("#34495e", "#f2d643", "#C10007"))(6)
colorRampPalette(c("#34495e", "#f2d643", "#C10007"))(8)
colorRampPalette(c("#34495e", "#C10007", "#f2d643"))(8)
colorRampPalette(c("#34495e", "#C10007"))(5)
colorRampPalette(c("#34495e", "#99a4ae"))(5)
colorRampPalette(c("#293a4b", "#85919e"))(5)
library(auritus)
launch_auritus()
auritus::launch_auritus()
devtools::document()
launch_auritus()
auritus::launch_auritus()
?e_theme
mtcars %>%
e_charts(mpg) %>%
e_line(disp) %>%
e_area(hp) %>%
e_x_axis(min = 10) -> p
p %>% e_theme("auritus")
library(echarts4r)
mtcars %>%
e_charts(mpg) %>%
e_line(disp) %>%
e_area(hp) %>%
e_x_axis(min = 10) -> p
p %>% e_theme("chalk")
mtcars %>%
e_charts(mpg) %>%
e_line(disp) %>%
e_area(hp) %>%
e_x_axis(min = 10) -> p
p %>% e_theme("auritus")
library(auritus)
launch_auritus()
library(echarts4r)
?e_theme
mtcars %>%
e_charts(mpg) %>%
e_line(disp) %>%
e_area(hp) %>%
e_x_axis(min = 10) -> p
p %>% e_theme("chalk") -> e
e$x$opts$theme
e$x$theme
mtcars %>%
e_charts(mpg) %>%
e_line(disp) %>%
e_area(hp) %>%
e_x_axis(min = 10) -> p
p %>% e_theme("auritu") -> e
mtcars %>%
e_charts(mpg) %>%
e_line(disp) %>%
e_area(hp) %>%
e_x_axis(min = 10) -> p
p %>% e_theme("auritus") -> e
e
library(auritus)
launch_auritus()
auritus::launch_auritus()
library(auritus)
launch_auritus()
?echarts4r::e_theme
library(auritus)
launch_auritus()
library(echarts4r)
?e_map
choropleth <- data.frame(
countries = c("France", "Brazil", "China", "Russia", "Canada", "India", "United States",
"Argentina", "Australia"),
values = round(runif(9, 10, 25))
)
choropleth %>%
e_charts(countries) %>%
e_map(values) %>%
e_visual_map(min = 10, max = 25)
choropleth <- data.frame(
countries = c("France", "Brazil", "China", "Russia", "Canada", "India", "United States",
"Argentina", "Australia"),
values = round(runif(9, 10, 25))
)
choropleth %>%
e_charts(countries) %>%
e_map(values) %>%
e_visual_map(min = 10, max = 25) %>%
e_theme("auritus")
library(auritus)
launch_auritus()
launch_auritus()
auritus::launch_auritus()
auritus::launch_auritus()
library(auritus)
auritus::launch_auritus()
launch_auritus()
?webhoserx::whe_lexdiv
devtools::document()
library(auritus)
crawl_data(pages = 50)
?webhoserx::whe_lexdiv
library(auritus)
crawl_data()
config <- "_auritus.yml"
settings <- yaml::read_yaml(config)
settings_list <- names(settings)
i = 1
q <- as.data.frame(settings$queries[[1]][[i]])
q
query <- webhoser::wh_news(
settings$token,
q$search,
ts = as.numeric(TS),
quiet = quiet,
highlight = TRUE
) %>%
webhoser::wh_paginate(pages) %>%
webhoser::wh_collect(flatten = TRUE)
TS <- Sys.Date() - 30
query <- webhoser::wh_news(
settings$token,
q$search,
ts = as.numeric(TS),
quiet = quiet,
highlight = TRUE
) %>%
webhoser::wh_paginate(pages) %>%
webhoser::wh_collect(flatten = TRUE)
quiet = F
query <- webhoser::wh_news(
settings$token,
q$search,
ts = as.numeric(TS),
quiet = quiet,
highlight = TRUE
) %>%
webhoser::wh_paginate(pages) %>%
webhoser::wh_collect(flatten = TRUE)
pages = 2
query <- webhoser::wh_news(
settings$token,
q$search,
ts = as.numeric(TS),
quiet = quiet,
highlight = TRUE
) %>%
webhoser::wh_paginate(pages) %>%
webhoser::wh_collect(flatten = TRUE)
dfm <- quanteda::dfm(query$text)
lexdiv <- quanteda::textstat_lexdiv(dfm, measure = "R")
length(unname(lexdiv))
head(lexdiv)
head(lexdiv[[2]])
devtools::document()
library(auritus)
crawl_data()
i = 1
config <- "_auritus.yml"
TS <- Sys.Date() - days
q <- as.data.frame(settings$queries[[1]][[i]])
config <- "_auritus.yml"
settings <- yaml::read_yaml(config)
settings_list <- names(settings)
i = 1
q <- as.data.frame(settings$queries[[1]][[i]])
TS <- Sys.Date() - 30
pages = 2
quiet = F
query <- webhoser::wh_news(
settings$token,
q$search,
ts = as.numeric(TS),
quiet = quiet,
highlight = TRUE
) %>%
webhoser::wh_paginate(pages) %>%
webhoser::wh_collect(flatten = TRUE) %>%
mutate(
query_id = q$id,
query_name = q$name
) %>%
webhoserx::whe_lexdiv() %>%
webhoserx::whe_paragraphs() %>%
webhoserx::whe_pre_gram() %>%
webhoserx::whe_quotes() %>%
webhoserx::whe_sentences() %>%
webhoserx::whe_topmedia() %>%
webhoserx::whe_words()
library(dplyr)
query <- webhoser::wh_news(
settings$token,
q$search,
ts = as.numeric(TS),
quiet = quiet,
highlight = TRUE
) %>%
webhoser::wh_paginate(pages) %>%
webhoser::wh_collect(flatten = TRUE) %>%
mutate(
query_id = q$id,
query_name = q$name
) %>%
webhoserx::whe_lexdiv() %>%
webhoserx::whe_paragraphs() %>%
webhoserx::whe_pre_gram() %>%
webhoserx::whe_quotes() %>%
webhoserx::whe_sentences() %>%
webhoserx::whe_topmedia() %>%
webhoserx::whe_words()
View(head(query))
?webhoserx::whe_pre_gram
devtools::document()
library(auritus)
crawl_data()
cat("\n")
launch_auritus()
config <- "_auritus.yml"
settings <- yaml::read_yaml(config)
settings_list <- names(settings)
pool <- pool::dbPool(RSQLite::SQLite(), dbname = "articles")
query <- "SELECT * from articles LIMIT 100;"
df <- dbGetQuery(pool, query)
df <- DBI::dbGetQuery(pool, query)
names(df)
hist(df$quotes)
hist(df$lexdiv)
hist(df$nwords)
hist(df$nparagraphs)
hist(df$sentences)
hist(df$nsentences)
hist(df$topmedia)
df %>% count(topmedia)
pool::poolClose(pool)
devtools::document()
library(auritus)
crawl_data()
