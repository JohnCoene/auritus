}
},
"label": {
"normal": {
"textStyle": {
"color": "#000000"
}
},
"emphasis": {
"textStyle": {
"color": "#34495e"
}
}
}
},
"geo": {
"itemStyle": {
"normal": {
"areaColor": "#eee",
"borderColor": "#34495e",
"borderWidth": "0.3"
},
"emphasis": {
"areaColor": "rgba(193,0,7,0.29)",
"borderColor": "#c10007",
"borderWidth": "1.5"
}
},
"label": {
"normal": {
"textStyle": {
"color": "#000000"
}
},
"emphasis": {
"textStyle": {
"color": "#34495e"
}
}
}
},
"categoryAxis": {
"axisLine": {
"show": true,
"lineStyle": {
"color": "#a3a3a3"
}
},
"axisTick": {
"show": true,
"lineStyle": {
"color": "#a3a3a3"
}
},
"axisLabel": {
"show": true,
"textStyle": {
"color": "#a3a3a3"
}
},
"splitLine": {
"show": false,
"lineStyle": {
"color": [
"#a3a3a3"
]
}
},
"splitArea": {
"show": false,
"areaStyle": {
"color": [
"rgba(255,255,255,0)",
"rgba(200,200,200,0.3)"
]
}
}
},
"valueAxis": {
"axisLine": {
"show": true,
"lineStyle": {
"color": "#a3a3a3"
}
},
"axisTick": {
"show": true,
"lineStyle": {
"color": "#a3a3a3"
}
},
"axisLabel": {
"show": true,
"textStyle": {
"color": "#a3a3a3"
}
},
"splitLine": {
"show": false,
"lineStyle": {
"color": [
"#a3a3a3"
]
}
},
"splitArea": {
"show": false,
"areaStyle": {
"color": [
"rgba(255,255,255,0)",
"rgba(200,200,200,0.3)"
]
}
}
},
"logAxis": {
"axisLine": {
"show": true,
"lineStyle": {
"color": "#a3a3a3"
}
},
"axisTick": {
"show": true,
"lineStyle": {
"color": "#a3a3a3"
}
},
"axisLabel": {
"show": true,
"textStyle": {
"color": "#a3a3a3"
}
},
"splitLine": {
"show": false,
"lineStyle": {
"color": [
"#a3a3a3"
]
}
},
"splitArea": {
"show": false,
"areaStyle": {
"color": [
"rgba(255,255,255,0)",
"rgba(200,200,200,0.3)"
]
}
}
},
"timeAxis": {
"axisLine": {
"show": true,
"lineStyle": {
"color": "#a3a3a3"
}
},
"axisTick": {
"show": true,
"lineStyle": {
"color": "#a3a3a3"
}
},
"axisLabel": {
"show": true,
"textStyle": {
"color": "#a3a3a3"
}
},
"splitLine": {
"show": false,
"lineStyle": {
"color": [
"#a3a3a3"
]
}
},
"splitArea": {
"show": false,
"areaStyle": {
"color": [
"rgba(255,255,255,0)",
"rgba(200,200,200,0.3)"
]
}
}
},
"toolbox": {
"iconStyle": {
"normal": {
"borderColor": "#a3a3a3"
},
"emphasis": {
"borderColor": "#c10007"
}
}
},
"legend": {
"textStyle": {
"color": "#333333"
}
},
"tooltip": {
"axisPointer": {
"lineStyle": {
"color": "#d6d1d1",
"width": ".5"
},
"crossStyle": {
"color": "#d6d1d1",
"width": ".5"
}
}
},
"timeline": {
"lineStyle": {
"color": "#34495e",
"width": 1
},
"itemStyle": {
"normal": {
"color": "#34495e",
"borderWidth": 1
},
"emphasis": {
"color": "rgba(193,0,7,0.64)"
}
},
"controlStyle": {
"normal": {
"color": "#34495e",
"borderColor": "#34495e",
"borderWidth": 0.5
},
"emphasis": {
"color": "#34495e",
"borderColor": "#34495e",
"borderWidth": 0.5
}
},
"checkpointStyle": {
"color": "#c10007",
"borderColor": "rgba(193,0,7,0.3)"
},
"label": {
"normal": {
"textStyle": {
"color": "rgba(52,73,94,0.85)"
}
},
"emphasis": {
"textStyle": {
"color": "rgba(52,73,94,0.85)"
}
}
}
},
"visualMap": {
"color": [
"#516d8a",
"#8adbdb"
]
},
"dataZoom": {
"backgroundColor": "rgba(0,0,0,0)",
"dataBackgroundColor": "rgba(52,73,94,0.4)",
"fillerColor": "rgba(52,73,94,0.4)",
"handleColor": "rgba(193,0,7,0.94)",
"handleSize": "100%",
"textStyle": {
"color": "#34495e"
}
},
"markPoint": {
"label": {
"normal": {
"textStyle": {
"color": "#eee"
}
},
"emphasis": {
"textStyle": {
"color": "#eee"
}
}
}
}
}')
json[24:length(json)] %>% head
json[22:length(json)] %>% head
json[23:length(json)] %>% head
json[23:length(json)] %>% tail()
json[23:length(json)-1] %>% tail()
json[23:length(json)-2] %>% tail()
paste0("{", json[23:length(json)-2], "}") %>% jsonlite::fromJSON()
paste0("{", json[23:length(json)-2], "}", collapse = "") %>% jsonlite::fromJSON()
paste0("{", json[23:length(json)-2], "}", collapse = "")
paste0("{", json[24:length(json)-2], "}") %>% jsonlite::fromJSON()
paste0("{", json[24:length(json)-2], "}")
paste0("{", json[24:length(json)-2], "}", collapse = "")
paste0("{", json[26:length(json)-2], "}", collapse = "")
paste0("{", json[25:length(json)-2], "}", collapse = "")
paste0("{", json[25:length(json)-2], "}", collapse = "") %>% jsonlite::fromJSON()
json[25:length(json)-2]
json[25:length(json)-2] %>% paste0(collapse = "")
json[25:length(json)-2] %>% paste0(collapse = "") %>% jsonlite::fromJSON()
paste0("{", json[25:length(json)-2], "}", collapse = "") %>% jsonlite::fromJSON()
json[25:length(json)-2] %>% paste0(collapse = "") %>% jsonlite::fromJSON()
json[25:length(json)-2] %>% paste0(collapse = "")
paste0("{", json[25:length(json)-2], "}", collapse = "") %>% jsonlite::fromJSON()
paste0("{", json[25:length(json)-2], "}", collapse = "")
file <-
system.file(
paste0(
"htmlwidgets/lib/echarts-4.3.2/themes/", theme, ".js"
),
package = "echarts4r"
)
json <- readLines(file)
json
head(json)
head(json, 25)
paste0("{", json[22:length(json)-2], "}", collapse = "")
head(json, 22)
json[22:length(json)]
json[23:(length(json) - 2)]
json[23:(length(json) - 2)] %>%
paste0(collapse = "") %>%
paste0("{", ., "}") %>%
jsonlite::fromJSON()
js <- readLines(file)
json <- js[23:(length(js) - 2)] %>%
paste0(collapse = "") %>%
paste0("{", ., "}") %>%
jsonlite::fromJSON()
json
json$visualMap
json$visualMap$color
devtools::document()
theme = "auritus"
file <-
system.file(
paste0(
"htmlwidgets/lib/echarts-4.3.2/themes/", theme, ".js"
),
package = "echarts4r"
)
js <- readLines(file)
json <- js[23:(length(js) - 2)] %>%
paste0(collapse = "") %>%
paste0("{", ., "}") %>%
jsonlite::fromJSON()
js[1] == ""
js <- readLines(file)
N <- ifelse(js[1] == "", 24, 23)
json <- js[N:(length(js) - 2)] %>%
paste0(collapse = "") %>%
paste0("{", ., "}") %>%
jsonlite::fromJSON()
json$visualMap$color
devtools::document()
library(auritus)
launch_auritus()
launch_auritus()
theme
json$backgroundColor
library(auritus)
launch_auritus()
launch_auritus()
launch_auritus()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
library(auritus)
launch_auritus()
library(auritus)
library(auritus)
remotes::install_github("nteetor/yonder")
library(yonder)
?navbar
div(
navbar(
brand = "Navbar",
navInput(
id = "tabs",
choices = c("Home", "About", "Our process")
) %>%
margin(right = "auto"),
formInput(
inline = TRUE,
id = "navForm",
searchInput("search", placeholder = "Search") %>%
margin(right = c(sm = 2)),
submit = submitInput("Search") %>%
background("amber")
)
) %>%
background("teal"),
container(
navContent(
navPane(
h3("Home")
),
navPane(
h3("About")
),
navPane(
h3("The process")
)
)
)
)
ui <- container(
buttonInput(
id = "trigger",
"Open modal",
icon("plus")
)
)
server <- function(input, output) {
observeEvent(input$trigger, ignoreInit = TRUE, {
showModal(
modal(
title = "A simple modal",
body = paste(
"Cras mattis consectetur purus sit amet fermentum.",
"Cras justo odio, dapibus ac facilisis in, egestas",
"eget quam. Morbi leo risus, porta ac consectetur",
"ac, vestibulum at eros."
)
)
)
})
}
shinyApp(ui, server)
ui <- container(
buttonInput(
id = "demo",
label = "Toggle collapse"
),
collapsiblePane(
id = "collapse",
p(
"Pellentesque condimentum, magna ut suscipit hendrerit, ",
"ipsum augue ornare nulla, non luctus diam neque sit amet urna."
),
p(
"Praesent fermentum tempor tellus.  Vestibulum convallis, ",
"lorem a tempus semper, dui dui euismod elit, vitae placerat ",
"urna tortor vitae lacus."
)
)
)
server <- function(input, output) {
observeEvent(input$demo, {
togglePane("collapse")
})
}
shinyApp(ui, server)
jumbotron
ui <- container(
navInput(
id = "tabs",
choices = list(
"Tab 1",
dropdown(
label = "Tab 2",
buttonInput("action", "Action"),
buttonInput("another", "Another action")
),
"Tab 3"
),
values = paste0("pane", 1:3),
appearance = "tabs"
),
navContent(
navPane(
id = "pane1",
"Donec at pede.",
"Pellentesque tristique imperdiet tortor.",
"Lorem ipsum dolor sit amet, consectetuer adipiscing elit."
),
navPane(
id = "pane2",
"Nullam tristique diam non turpis.",
"Cras placerat accumsan nulla.",
"Donec at pede."
),
navPane(
id = "pane3",
"Phasellus purus.",
"Etiam laoreet quam sed arcu.",
"Donec pretium posuere tellus."
)
)
)
server <- function(input, output) {
observeEvent(input$tabs, {
showPane(input$tabs)
})
observeEvent(c(input$action, input$another), {
if (input$action > 0 || input$another > 0) {
showPane("pane2")
}
})
}
shinyApp(ui, server)
