remotes::install_github("JohnCoene/webhoser")
remotes::install_github("JohnCoene/webhoser.extension")
?webhoser.extension::whe_search()
?webhoser.extension::whe_search
webhoser.extension::whe_search
devtools::document()
devtools::check()
library(auritus)
setup_auritus()
load("data/articles.RData")
names(articles)
hist(articles$Champagne_text)
unique(articles$Champagne_text)
unique(articles$cabernet_text)
unique(articles$Cabernet_text)
dat <- articles %>%
webhoser.extension::whe_search("the", "the", "text")
unique(dat$the)
View(articles)
file.exists("data/articles.RData")
unique(articles$Champagne_text)
unique(articles$Champagne_1p)
unique(articles$Champagne_title)
grep("champagne", articles$text)
head(articles$text)
?webhoser::wh_news()
grep("champagne", articles$text)
crawl_auritus()
setup_auritus()
setup_auritus()
load("data/articles.RData")
unique(articles$Champagne_text)
unique(articles$Wine_text)
unique(articles$Champagne_text)
head(articles$text, 1)
head(articles$text, 2)
head(articles$text, 3)
devtools::document()
grep("mpg", names(mtcars))
grepl("mpg", names(mtcars))
mtcars[, grepl("mpg", names(mtcars))]
mtcars[, grepl("mpg|qsec", names(mtcars))]
segment_cols <- grepl("_segment$", names(articles))
grepl("mpg|qsec", names(mtcars))
!grepl("mpg|qsec", names(mtcars))
devtools::document()
library(auritus)
setup_auritus()
segment_data()
library(auritus)
segment_data()
library(auritus)
segment_data()
for (id in c(1,4,5)){
print(id)
}
library(auritus)
segment_data()
library(auritus)
segment_data()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
?load_data
devtools::document()
devtools::document()
devtools::check()
devtools::check()
load_data()
?load_data
devtools::document()
library(auritus)
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
library(auritus)
install.packages("bs4Dash")
remotes::install_github("RinteRface/bas4Dash")
remotes::install_github("RinteRface/bs4Dash")
shinythemes::themeSelector()
?shinythemes::themeSelector()
config <- "_auritus.yml"
if(!file.exists(config)){
cat(
crayon::red(cli::symbol$cross), "No", crayon::underline("_auritus.yml"), "configuration file."
)
}
settings <- yaml::read_yaml(config)
settings_list <- names(settings)
cat(crayon::yellow(cli::symbol$warning), "No theme set in", crayon::underline("_auritus.yml."))
crayon::strip_style("s")
crayon::strip_style("sss")
crayon::strikethrough("sss")
cat(crayon::strikethrough("sss"))
cat(
crayon::yellow(cli::symbol$warning), "No theme set in _autitus.yml, defaulting to",
crayon::underline("paper.")
)
?shinythemes::shinytheme
install.packages("shinyWidgets")
system.file("css/common.css", package = "auritus")
devtools::document()
library(auritus)
system.file("css/common.css", package = "auritus")
devtools::document()
shiny::addResourcePath(
"auritus-css",
system.file("css", package = "auritus")
)
devtools::document()
devtools::check()
devtools::document()
library(auritus)
devtools::document()
devtools::check()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
shiny::addResourcePath(
"auritus-css",
system.file("css", package = "auritus")
)
navbarPage()
?navbarPage()
shiny::tags$link(
rel = "stylesheet",
text = "text/css",
src = "auritus-css/common.css"
)
devtools::document()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
launch_auritus()
library(auritus)
launch_auritus()
theme
library(auritus)
launch_auritus()
library(auritus)
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
ui <- navbarPage(
title = "auritus",
windowTitle = "auritus",
theme = shinythemes::shinytheme(theme),
head = tagList(
shiny::tags$link(
rel = "stylesheet",
text = "text/css",
src = "auritus-css/common.css"
)
),
tabPanel(
"Home",
homeUI("home")
)
)
library(auritus)
launch_auritus()
?htmltools::attachDependencies
?shiny::createWebDependency()
homeUI <- function(id){
ns <- NS(id)
tagList(
div(
class = "container",
div(
class = "jumbotron",
h1("auritus", class = "auritus")
)
)
)
}
ui <- navbarPage(
title = "auritus",
windowTitle = "auritus",
id = "navbarTabs",
theme = shinythemes::shinytheme(theme),
header = tagList(
shiny::tags$link(
rel = "stylesheet",
text = "text/css",
src = "auritus-css/common.css"
)
),
tabPanel(
"Home",
icon = icon("home"),
homeUI("home")
)
)
theme = "paper"
ui <- navbarPage(
title = "auritus",
windowTitle = "auritus",
id = "navbarTabs",
theme = shinythemes::shinytheme(theme),
header = tagList(
shiny::tags$link(
rel = "stylesheet",
text = "text/css",
src = "auritus-css/common.css"
)
),
tabPanel(
"Home",
icon = icon("home"),
homeUI("home")
)
)
server <- function(input, output, session){
}
shinyApp(ui, server)
?addResourcePath
library(auritus)
system.file("www/css", package = "auritus")
devtools::document()
library(auritus)
launch_auritus()
?runGadget
?shiny::runApp
system.file("app", package = "auritus")
devtools::document()
devtools::document()
devtools::document()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
?runGadget
devtools::document()
library(auritus)
launch_auritus()
devtools::document()
library(auritus)
launch_auritus()
devtools::document()
library(auritus)
launch_auritus()
devtools::document()
devtools::check()
library(auritus)
