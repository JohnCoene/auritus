rel = "stylesheet",
text = "text/css",
src = "auritus-css/common.css"
)
),
tabPanel(
"Home",
icon = icon("home"),
homeUI("home")
)
)
theme = "paper"
ui <- navbarPage(
title = "auritus",
windowTitle = "auritus",
id = "navbarTabs",
theme = shinythemes::shinytheme(theme),
header = tagList(
shiny::tags$link(
rel = "stylesheet",
text = "text/css",
src = "auritus-css/common.css"
)
),
tabPanel(
"Home",
icon = icon("home"),
homeUI("home")
)
)
server <- function(input, output, session){
}
shinyApp(ui, server)
?addResourcePath
library(auritus)
system.file("www/css", package = "auritus")
devtools::document()
library(auritus)
launch_auritus()
?runGadget
?shiny::runApp
system.file("app", package = "auritus")
devtools::document()
devtools::document()
devtools::document()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
?runGadget
devtools::document()
library(auritus)
launch_auritus()
devtools::document()
library(auritus)
launch_auritus()
devtools::document()
library(auritus)
launch_auritus()
devtools::document()
devtools::check()
library(auritus)
<br/>
<br/>
<br/>
<br/>
devtools::document()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
launch_auritus()
?navbarPage
config <- "_auritus.yml"
config
settings <- yaml::read_yaml(config)
settings$segments
settings$style
!"theme" %in% names(settings[["style"]]
!"theme" %in% names(settings[["style"]])
settings[["style"]]
names(settings[["style"]])
names(settings[["error"]])
!"theme" %in% names(settings[["error"]])
settings[["style"]][["inverse"]]
settings[["style"]][["er"]]
library(auritus)
launch_auritus()
settings <- yaml::read_yaml(config)
"%||%" <- function(x, y) {
if (length(x) > 0 || is.null(x)) x else y
}
settings[["style"]][["inverse"]] %||% FALSE
settings[["style"]][["inverse"]]
"%||%" <- function(x, y) {
if (length(x) > 0 || !is.null(x)) x else y
}
settings[["style"]][["inverse"]]
settings[["style"]][["inverse"]] %||% FALSE
devtools::document()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
launch_auritus()
devtools::document()
devtools::check()
library(auritus)
crawl_data()
crawl_data(append = TRUE, pages = 5)
# give user a change to stop process
cat(
crayon::yellow(cli::symbol$warning), "Hit", crayon::underline("CTRL + C"), "to cancel."
)
launch_auritus()
cat(
crayon::yellow(cli::symbol$warning), "No theme set in _autitus.yml, defaulting to",
crayon::underline("paper.\n")
)
devtools::document()
library(auritus)
launch_auritus()
launch_auritus()
launch_auritus()
launch_auritus()
library(auritus)
launch_auritus()
?shinybulma::bulmaNavbar()
library(shinybulma)
devtools::document()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
?bulmaPage
devtools::document()
library(auritus)
launch_auritus()
devtools::document()
library(auritus)
launch_auritus()
launch_auritus()
bulma_themes()
library(echarts4r)
e_theme
detach("package:echarts4r", unload = T)
?bulmaHero
?bulmaSection
devtools::document()
library(auritus)
launch_auritus()
launch_auritus()
library(auritus)
launch_auritus()
?bulmaButtonBadge()
shinybulma::bulma_themes()
?shinybulma::bulmaNav()
?shinybulma::bulmaNav()
?echarts4r::e_theme
library(auritus)
launch_auritus()
remotes::install_github("RinteRface/shinybulma")
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
library(auritus)
launch_auritus()
mx <- max(load_data()$published)
mx
dat <- load_data()
library(auritus)
devtools::document()
devtools::check()
library(auritus)
setup_auritus()
library(auritus)
setup_auritus()
library(auritus)
setup_auritus()
crawl_data(pages = 100)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
?e_grid
library(tippy)
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
?bulmaSubtitle
?shinybulma::bulmaLevel
library(shiny)
shinyApp(
ui = bulmaPage(
bulmaLevel(
bulmaLevelItem("Tweets", "3'456"),
bulmaLevelItem("Following", 765),
bulmaLevelItem("Followers", "2'134")
),
bulmaLevelOutput("levels")
),
server = function(input, output) {
output$levels <- renderBulmaLevel({
bulmaLevel(
bulmaLevelItem("Tweets", sample(100:5000, 1)),
bulmaLevelItem("Following", sample(100:5000, 1)),
bulmaLevelItem("Followers", sample(100:5000, 1))
)
})
}
)
library(shinybulma)
library(shiny)
shinyApp(
ui = bulmaPage(
bulmaLevel(
bulmaLevelItem("Tweets", "3'456"),
bulmaLevelItem("Following", 765),
bulmaLevelItem("Followers", "2'134")
),
bulmaLevelOutput("levels")
),
server = function(input, output) {
output$levels <- renderBulmaLevel({
bulmaLevel(
bulmaLevelItem("Tweets", sample(100:5000, 1)),
bulmaLevelItem("Following", sample(100:5000, 1)),
bulmaLevelItem("Followers", sample(100:5000, 1))
)
})
}
)
library(auritus)
launch_auritus()
data <- load_data()
names(data)
data$thread.site
data$thread.site_full
data$thread.site
View(head(data))
count(data, thread.site, sort = T)
library(dplyr)
count(data, thread.site, sort = T)
bulmaLevelItem
count(data, author, sort = T)
View(head(data))
count(data, country, sort = T)
count(data, thread.country, sort = T)
country <- data %>%
count(thread.country, sort = T) %>%
filter(thread.country != "") %>%
e_country_names(thread.country, thread.country)
library(echarts4r)
country <- data %>%
count(thread.country, sort = T) %>%
filter(thread.country != "") %>%
e_country_names(thread.country, thread.country)
head(country)
?e_map_3d
devtools::document()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
bulmaCard()
?bulmaCard()
library(shiny)
shinyApp(
ui = bulmaPage(
bulmaSection(
bulmaContainer(
bulmaCard(
bulmaCardHeader(
bulmaCardHeaderTitle(
"Card title"
)
),
bulmaCardContent(
"Content of the card."
),
bulmaCardFooter(
bulmaCardFooterItem(
"Item 1"
),
bulmaCardFooterItem(
"Item 2"
)
)
)
)
)
),
server = function(input, output) {}
)
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
launch_auritus()
config <- "_auritus.yml"
settings <- yaml::read_yaml(config)
settings_list <- names(settings)
theme <- settings[["style"]][["theme"]]
theme
bulma_themes()
launch_auritus()
launch_auritus()
?bulma_themes
?bulmaPage
library(shiny)
shiny::shinyApp(
ui = bulmaPage(
theme = "nuclear",
bulmaNavbar(
bulmaNavbarBrand(
bulmaNavbarItem(
"shinybulma"
),
bulmaNavbarBurger()
),
bulmaNavbarMenu( # not visible on smaller devices
bulmaNavbarItem(
"Item 1"
),
bulmaNavbarItem(
"Item 2"
),
bulmaNavbarDropdown(
label = "Drop-down",
bulmaNavbarItem(
"Select 1"
),
bulmaNavbarItem(
"Select 2"
)
)
)
),
bulmaNav(
"Item 1",
bulmaTitle("Content for item 1 here.")
),
bulmaNav(
"Item 2",
bulmaTitle("Content for item 2 here.")
)
),
server = function(input, output) {}
)
launch_auritus()
c(file = system.file("bulma-themes-0.7.2", package = "shinybulma"))
?bulmaPage
?shiny::bulmaPage
?shinybulma::bulmaPage
library(shinybulma)
library(shiny)
shiny::shinyApp(
ui = theme(
theme = "dark",
bulmaNavbar(
bulmaNavbarBrand(
bulmaNavbarItem(
"shinybulma"
),
bulmaNavbarBurger()
),
bulmaNavbarMenu( # not visible on smaller devices
bulmaNavbarItem(
"Item 1"
),
bulmaNavbarItem(
"Item 2"
),
bulmaNavbarDropdown(
label = "Drop-down",
bulmaNavbarItem(
"Select 1"
),
bulmaNavbarItem(
"Select 2"
)
)
)
),
bulmaNav(
"Item 1",
bulmaTitle("Content for item 1 here.")
),
bulmaNav(
"Item 2",
bulmaTitle("Content for item 2 here.")
)
),
server = function(input, output) {}
)
shiny::shinyApp(
ui = bulmaPage(
theme = "dark",
bulmaNavbar(
bulmaNavbarBrand(
bulmaNavbarItem(
"shinybulma"
),
bulmaNavbarBurger()
),
bulmaNavbarMenu( # not visible on smaller devices
bulmaNavbarItem(
"Item 1"
),
bulmaNavbarItem(
"Item 2"
),
bulmaNavbarDropdown(
label = "Drop-down",
bulmaNavbarItem(
"Select 1"
),
bulmaNavbarItem(
"Select 2"
)
)
)
),
bulmaNav(
"Item 1",
bulmaTitle("Content for item 1 here.")
),
bulmaNav(
"Item 2",
bulmaTitle("Content for item 2 here.")
)
),
server = function(input, output) {}
)
shiny::shinyApp(
ui = bulmaPage(
theme = "darkly",
bulmaNavbar(
bulmaNavbarBrand(
bulmaNavbarItem(
"shinybulma"
),
bulmaNavbarBurger()
),
bulmaNavbarMenu( # not visible on smaller devices
bulmaNavbarItem(
"Item 1"
),
bulmaNavbarItem(
"Item 2"
),
bulmaNavbarDropdown(
label = "Drop-down",
bulmaNavbarItem(
"Select 1"
),
bulmaNavbarItem(
"Select 2"
)
)
)
),
bulmaNav(
"Item 1",
bulmaTitle("Content for item 1 here.")
),
bulmaNav(
"Item 2",
bulmaTitle("Content for item 2 here.")
)
),
server = function(input, output) {}
)
devtools::document()
library(auritus)
launch_auritus()
launch_auritus()
launch_auritus()
launch_auritus()
launch_auritus()
devtools::document()
library(auritus)
?auritus::setup_auritus
devtools::document()
devtools::install_github("JohnCoene/pool")
devtools::install_github("rstudio/pool")
devtools::document()
devtools::check()
library(auritus)
crawl_data()
installed.packages("RSQLite")
install.packages("RSQLite")
crawl_data()
launch_auritus()
library(auritus)
launch_auritus()
?setup_auritus
