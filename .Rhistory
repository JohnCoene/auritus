x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 100) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels() %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE,
max = 100
) %>%
e_y_axis(show = FALSE) %>%
e_legend(FALSE) %>%
e_flip_coords()
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 100) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels() %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE
) %>%
e_y_axis(show = FALSE, max = 100) %>%
e_legend(FALSE) %>%
e_flip_coords()
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 100) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels() %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE
) %>%
e_y_axis(show = FALSE, max = 100) %>%
e_legend(FALSE) %>%
e_flip_coords()
e_labels
?e_labels
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 70) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels(position = "inside") %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE,
max = 100
) %>%
e_y_axis(show = FALSE) %>%
e_legend(FALSE)
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 70) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels(position = "inside") %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE,
max = 100
) %>%
e_y_axis(show = FALSE) %>%
e_legend(FALSE) %>%
e_flip_coords()
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 70) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels(position = "inside") %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE
) %>%
e_y_axis(
show = FALSE,
max = 100
) %>%
e_legend(FALSE) %>%
e_flip_coords()
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 70) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels(
position = "inside",
formatter = htmlwidgets::JS("function(x){return(x + '%')}")
) %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE
) %>%
e_y_axis(
show = FALSE,
max = 100
) %>%
e_legend(FALSE) %>%
e_flip_coords()
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 70) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels(
position = "inside",
formatter = htmlwidgets::JS("function(x){return(x.value + '%')}")
) %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE
) %>%
e_y_axis(
show = FALSE,
max = 100
) %>%
e_legend(FALSE) %>%
e_flip_coords()
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 70) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels(
position = "inside",
formatter = htmlwidgets::JS("function(x){return(x[0].value + '%')}")
) %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE
) %>%
e_y_axis(
show = FALSE,
max = 100
) %>%
e_legend(FALSE) %>%
e_flip_coords()
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 70) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels(
position = "inside",
formatter = htmlwidgets::JS("function(x){return(x.value + '%')}")
) %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE
) %>%
e_y_axis(
show = FALSE,
max = 100
) %>%
e_legend(FALSE) %>%
e_flip_coords()
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 70) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels(
position = "inside",
formatter = "{c}%"
) %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE
) %>%
e_y_axis(
show = FALSE,
max = 100
) %>%
e_legend(FALSE) %>%
e_flip_coords()
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 70) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels(
position = "inside",
formatter = "{b}%"
) %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE
) %>%
e_y_axis(
show = FALSE,
max = 100
) %>%
e_legend(FALSE) %>%
e_flip_coords()
data %>%
mutate(
x = "articles",
n = n / sum(n),
n = round(n * 100, 1)
) %>%
group_by(type) %>%
e_charts(x, height = 70) %>%
e_bar(
n,
radius = c("50%", "90%"),
stack = "stack"
) %>%
e_labels(
position = "inside",
formatter = "{a}%"
) %>%
e_grid(
top = 0,
bottom = 0,
left = 0,
right = 0
) %>%
e_x_axis(
show = FALSE
) %>%
e_y_axis(
show = FALSE,
max = 100
) %>%
e_legend(FALSE) %>%
e_flip_coords()
devtools::document()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
?e_theme
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
pool <- pool::dbPool(drv = RSQLite::SQLite(), dbname = "articles")
data <- DBI::dbGetQuery(pool, "SELECT * FROM articles LIMIT 100;$")
pool::poolClose(pool)
View(data)
launch_auritus()
count(data, author)
count(data, author, sort = T)
count(data, thread_site, sort = T)
data %>%
filter(thread_site_type == "news") %>%
count(thread_site)
data %>%
filter(thread_site_type == "news") %>%
count(thread_site, sort = T)
pool
query <- paste(base_query, date_query, "AND thread_site_type = 'news'")
base_query <- "SELECT thread_site, COUNT(thread_site) AS n FROM articles"
date_query <- paste0(
"WHERE published >= '", dates[1], " 00:00:00' AND published <= '", dates[2], " 23:59:59';"
)
query <- paste(base_query, date_query, "AND thread_site_type = 'news'")
N <- dbGetQuery(pool, query) %>%
pull(n)
pool <- pool::dbPool(drv = RSQLite::SQLite(), dbname = "articles")
N <- dbGetQuery(pool, query) %>%
pull(n)
N
N <- dbGetQuery(pool, query)
N
library(auritus)
pool::poolClose(pool)
launch_auritus()
library(auritus)
launch_auritus()
launch_auritus()
names(data)
unique(data$thread_site_type)
base_query <- "SELECT DISTINCT thread_site_type FROM articles"
query <- "SELECT DISTINCT thread_site_type FROM articles"
N <- dbGetQuery(pool, query)
pool
pool::poolClose(poll)
pool::poolClose(pool)
pool <- pool::dbPool(drv = RSQLite::SQLite(), dbname = "articles")
N <- DBI::dbGetQuery(pool, query)
N
library(auritus)
launch_auritus()
library(auritus)
launch_auritus()
?shinyWidgets::checkboxGroupButtons
library(auritus)
launch_auritus()
paste(LETTERS[1:3], collapse = ",")
library(auritus)
launch_auritus()
pool <- pool::dbPool(drv = RSQLite::SQLite(), dbname = "articles")
base_query <- "SELECT COUNT(uuid) AS n FROM articles"
date_query <- paste0(
"WHERE published >= '", dates[1], " 00:00:00' AND published <= '", dates[2], " 23:59:59'"
)
type_query <- paste(
"AND thread_site_type IN(", paste(input$sitetypes, collapse = ","), ")"
)
paste0(LETTERS[1:3], collapse = "',")
paste0(LETTERS[1:3], collapse = "','")
paste0(paste0(LETTERS[1:3], collapse = "','"), "'")
paste0("'", paste0(LETTERS[1:3], collapse = "','"), "'")
base_query <- "SELECT COUNT(uuid) AS n FROM articles"
date_query <- paste0(
"WHERE published >= '", dates[1], " 00:00:00' AND published <= '", dates[2], " 23:59:59'"
)
type_query <- paste(
"AND thread_site_type IN(",
paste0(
"'",
paste(input$sitetypes, collapse = "','"),
"'"
)
, ")"
)
query <- paste(base_query, date_query, ";")
base_query <- "SELECT COUNT(uuid) AS n FROM articles"
date_query <- paste0(
"WHERE published >= '", dates[1], " 00:00:00' AND published <= '", dates[2], " 23:59:59'"
)
type_query <- paste(
"AND thread_site_type IN(",
paste0(
"'",
paste(c("news", "blogs"), collapse = "','"),
"'"
)
, ")"
)
query <- paste(base_query, date_query, ";")
query
query <- paste(base_query, date_query, type_query, ";")
query
DBI::dbGetQuery(pool, query)
library(auritus)
pool::poolClose(pool)
launch_auritus()
library(auritus)
launch_auritus()
library(auritus)
launch
launch_auritus()
library(auritus)
launch_auritus()
devtools::document()
library(auritus)
devtools::document()
